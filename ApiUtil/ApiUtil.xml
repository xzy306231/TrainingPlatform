<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiUtil</name>
    </assembly>
    <members>
        <member name="T:ApiUtil.CacheUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.CacheUtil.Exists(System.String)">
            <summary>
            验证缓存是否存在
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.Set(System.String,System.Object,System.TimeSpan,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresSliding">滑动过期时长（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <param name="expiresAbsolute">绝对过期时长</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.Set(System.String,System.Object,System.TimeSpan,System.Boolean)">
            <summary>
            添加缓存
            </summary>
            <param name="key">缓存Key</param>
            <param name="value">缓存Value</param>
            <param name="expiresIn">缓存时长</param>
            <param name="isSliding">是否滑动过期（如果在过期时间内有操作，则以当前时间点延长过期时间）</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.RemoveAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            批量删除缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.Get(System.String)">
            <summary>
            获取缓存
            </summary>
            <param name="key">缓存Key</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.GetAll(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取缓存集合
            </summary>
            <param name="keys">缓存Key集合</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.RemoveCacheAll">
            <summary>
            删除所有缓存
            </summary>
        </member>
        <member name="M:ApiUtil.CacheUtil.RemoveCacheRegex(System.String)">
            <summary>
            删除匹配到的缓存
            </summary>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.SearchCacheRegex(System.String)">
            <summary>
            搜索 匹配到的缓存
            </summary>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.CacheUtil.GetCacheKeys">
            <summary>
            获取所有缓存键
            </summary>
            <returns></returns>
        </member>
        <member name="T:ApiUtil.ConfigUtil">
            <summary>
            配置文件工具
            </summary>
        </member>
        <member name="F:ApiUtil.ConfigUtil.ServiceProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.ConfigUtil.InitConfig(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化配置
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:ApiUtil.ConfigUtil.LocalIp">
            <summary>
            服务ip
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.FastWebAddress">
            <summary>
            FastDFS Web地址
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.FileSuffixList">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.MySqlConnectionString">
            <summary>
            MySql默认连接串
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.AllowUrl">
            <summary>
            链接白名单(可不做身份验证)
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.IsOpenCache">
            <summary>
            是否使用Redis
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.RedisConnectionString">
            <summary>
            Redis默认连接串
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.RedisInstanceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.ConfigUtil.HttpCurrent">
            <summary>
            统一请求页面实体
            </summary>
        </member>
        <member name="T:ApiUtil.CookieUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.CookieUtil.SetCookies(System.String,System.String,System.Int32)">
            <summary>
            设置本地cookie
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>  
            <param name="minutes">过期时长，单位：分钟</param>      
        </member>
        <member name="M:ApiUtil.CookieUtil.DeleteCookies(System.String)">
            <summary>
            删除指定的cookie
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:ApiUtil.CookieUtil.GetCookies(System.String,System.String)">
            <summary>
            获取cookies
            </summary>
            <param name="key">键</param>
            <param name="defaultValue"></param>
            <returns>返回对应的值</returns>
        </member>
        <member name="T:ApiUtil.Entities.FileTransfEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.FileTransfEntity.FileSuffix">
            <summary>
            文件后缀名
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.FileTransfEntity.OriginalUrl">
            <summary>
            原始文件路径
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.FileTransfEntity.GroupName">
            <summary>
            组名
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.FileTransfEntity.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.FileTransfEntity.SourceId">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Entities.MessageEntity">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.MessageEntity.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.MessageEntity.MsgTitle">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.MessageEntity.MsgBody">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="T:ApiUtil.Entities.PageData`1">
            <summary>
            返回页数据信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ApiUtil.Entities.PageData`1.Rows">
            <summary>
            数据行
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.PageData`1.Totals">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Entities.ResponseInfo">
            <summary>
            封装返回json格式
            正常信息
            </summary>
        </member>
        <member name="M:ApiUtil.Entities.ResponseInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.ResponseInfo.Result">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Entities.ResponseError">
            <summary>
            封装返回json格式
            异常信息
            </summary>
        </member>
        <member name="M:ApiUtil.Entities.ResponseError.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.ResponseError.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.ResponseError.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Entities.SystemLogEntity">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.UserCard">
            <summary>
            操作者工号
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.UserName">
            <summary>
            操作者名字
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.OptionType">
            <summary>
            操作类型
            1：登录 2：新增 3：修改 4：删除
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.LogDesc">
            <summary>
            日志描述
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.IsSuccessd">
            <summary>
            方法执行状态
            1.成功 2.失败
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.ErrorMsg">
            <summary>
            异常堆栈信息
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.SystemLogEntity.LogIp">
            <summary>
            操作者ip
            </summary>
        </member>
        <member name="T:ApiUtil.Entities.TodoEntity">
            <summary>
            待办
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.TodoEntity.TodoType">
            <summary>
            消息通知类型
            1.课程审核
            2.课件审核
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.TodoEntity.FinishFlag">
            <summary>
            任务状态
            1.未处理
            2.已处理
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.TodoEntity.CommonId">
            <summary>
            课件id
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.TodoEntity.Name">
            <summary>
            待办消息名
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.TodoEntity.Body">
            <summary>
            通知详细内容
            处理结果
            </summary>
        </member>
        <member name="P:ApiUtil.Entities.TodoEntity.HandleTime">
            <summary>
            通知发送时间
            </summary>
        </member>
        <member name="T:ApiUtil.FastDFSHelper.FastDFSConfig">
            <summary>
            FastDFS配置
            </summary>
        </member>
        <member name="P:ApiUtil.FastDFSHelper.FastDFSConfig.FastDFSIPAddress">
            <summary>
            ip
            </summary>
        </member>
        <member name="P:ApiUtil.FastDFSHelper.FastDFSConfig.FastDFSPort">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:ApiUtil.FastDFSHelper.FastDFSConfig.FastDFSWebAddress">
            <summary>
            Web地址
            </summary>
        </member>
        <member name="P:ApiUtil.FastDFSHelper.FastDFSConfig.FastDFS_OFF">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.FastDFSHelper.FastDFSUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.#ctor(Microsoft.Extensions.Logging.ILogger{ApiUtil.FastDFSHelper.FastDFSUtil})">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.FastDFSHelper.FastDFSUtil.Config">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.ImageFastDfsAsync(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传图片到文件服务器
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.PdfFastDfsAsync(System.IO.FileInfo)">
            <summary>
            上传pdf到文件服务器
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.TextFastDfsAsync(System.IO.FileInfo)">
            <summary>
            上传文本到文件服务器
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.GetImageStreamByUrl(System.String)">
            <summary>
            查看文件服务器文件
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.GetImageAbsolutePath(System.String)">
            <summary>
            获取绝对地址
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.GetApiImgPath(System.String)">
            <summary>
            获取图片路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="F:ApiUtil.FastDFSHelper.FastDFSUtil._isInitialize">
            <summary>
            是否已经初始化
            </summary>
        </member>
        <member name="F:ApiUtil.FastDFSHelper.FastDFSUtil.InitializeLock">
            <summary>
            静态锁
            </summary>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.EnsureConnectionInitialize">
            <summary>
            初始Connection
            </summary>
        </member>
        <member name="M:ApiUtil.FastDFSHelper.FastDFSUtil.DownFastDFS(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="T:ApiUtil.HttpApi.TokenInfo">
            <summary>
            Token信息
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.TokenInfo.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.TokenInfo.UserNumber">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.TokenInfo.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="T:ApiUtil.HttpApi.DictObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictObject.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictObject.Result">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictObject.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.HttpApi.DictValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.DicCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.CodeDsc">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.ParentId">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.CreateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.CreateBy">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApiUtil.HttpApi.DictValue.Remark">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.HttpApi.IPlatformApi">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.HttpApi.IPlatformApi.GetTokenInfoAsync(System.String)">
            <summary>
            获取Token信息
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.HttpApi.IPlatformApi.GetDictObjectAsync(System.String)">
            <summary>
            获取
            </summary>
            <param name="dicType"></param>
            <returns></returns>
        </member>
        <member name="T:ApiUtil.Linq.LinqExtensions">
            <summary>
            Linq扩展
            </summary>
        </member>
        <member name="M:ApiUtil.Linq.LinqExtensions.OrderByBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            多个OrderBy用逗号隔开,属性前面带-号表示反序排序，exp:"name,-createtime"
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.Linq.LinqExtensions.OrderByBatch``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            多个OrderBy用逗号隔开,属性前面带-号表示反序排序，exp:"name,-createtime"
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.Linq.LinqExtensions.OrderBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            正序排序单个
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.Linq.LinqExtensions.ThenBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            正序排序单个（非首个）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.Linq.LinqExtensions.OrderByDescending``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            反序排序单个
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.Linq.LinqExtensions.ThenByDescending``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            反序排序单个（非首个）
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:ApiUtil.Log.ILog">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.ILog.Information(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.ILog.Warning(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.ILog.Debug(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.ILog.Error(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Log.LogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.LogHelper.OutputClearness(System.String)">
            <summary>
            输出日志信息更明显
            </summary>
            <param name="logInfo"></param>
            <returns></returns>
        </member>
        <member name="T:ApiUtil.Log.LogNLog">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.LogNLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.LogNLog.Debug(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.LogNLog.Error(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.LogNLog.Information(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Log.LogNLog.Warning(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Mq.RabbitListener">
            <summary>
            RabbitMq监听
            </summary>
        </member>
        <member name="P:ApiUtil.Mq.RabbitListener.RouteKey">
            <summary>
            路由
            </summary>
        </member>
        <member name="F:ApiUtil.Mq.RabbitListener.QueueName">
            <summary>
            队列
            </summary>
        </member>
        <member name="P:ApiUtil.Mq.RabbitListener.ExchangeName">
            <summary>
            交换机
            </summary>
        </member>
        <member name="P:ApiUtil.Mq.RabbitListener.ExchangeTypeName">
            <summary>
            交换机使用的模式
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitListener.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            TODO：后续需要把配置文件导入
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitListener.StartAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitListener.StopAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitListener.Process(System.String)">
            <summary>
            处理消息的方法
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.Mq.RabbitListener.Register">
            <summary>
            注册消费者监听在这里
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitListener.DeRegister">
            <summary>
            
            </summary>
        </member>
        <member name="T:ApiUtil.Mq.RabbitMqClient">
            <summary>
            RabbitMq生产者
            </summary>
        </member>
        <member name="P:ApiUtil.Mq.RabbitMqClient.LocalIp">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.#ctor(Microsoft.Extensions.Logging.ILogger{ApiUtil.Mq.RabbitMqClient},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushMessage(System.String,System.String,System.Object)">
            <summary>
            完整消息发送
            </summary>
            <param name="exchangeName">交换机</param>
            <param name="routingKey">路由名</param>
            <param name="message">消息体</param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushMessage(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="routingKey"></param>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushFileMessage(System.Object)">
            <summary>
            文件上传发送消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushLogMessage(ApiUtil.Entities.SystemLogEntity)">
            <summary>
            日志记录
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushMsgMessage(ApiUtil.Entities.MessageEntity)">
            <summary>
            服务间消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushScormMessage(System.Object)">
            <summary>
            SCORM课件消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushTodoMessage(ApiUtil.Entities.TodoEntity)">
            <summary>
            待办消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushUserMessage(System.Object)">
            <summary>
            用户信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ApiUtil.Mq.RabbitMqClient.PushTransformMessage(ApiUtil.Entities.FileTransfEntity)">
            <summary>
            视频消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:ApiUtil.RedisUtil">
            <summary>
            
            </summary>
        </member>
        <member name="M:ApiUtil.RedisUtil.#ctor(Microsoft.Extensions.Logging.ILogger{ApiUtil.RedisUtil})">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ApiUtil.RedisUtil.Add(System.String,System.Object,System.Int32)">
            <summary>
            添加数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expireTime">过期时间</param>
        </member>
        <member name="M:ApiUtil.RedisUtil.Get(System.String,System.String)">
            <summary>
            获取数据
            </summary>
            <param name="key">键</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.RedisUtil.Get``1(System.String)">
            <summary>
            获取数据（对象）
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.RedisUtil.Remove(System.String)">
            <summary>
            移除数据
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:ApiUtil.RedisUtil.Refresh(System.String)">
            <summary>
            刷新数据
            </summary>
            <param name="key">键</param>
        </member>
        <member name="M:ApiUtil.RedisUtil.Replace(System.String,System.Object,System.Int32)">
            <summary>
            重置数据
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="expireTime">过期时间</param>
        </member>
        <member name="T:ApiUtil.ServiceHelper">
            <summary>
            服务间通信帮助类
            </summary>
        </member>
        <member name="M:ApiUtil.ServiceHelper.#ctor(Microsoft.Extensions.Logging.ILogger{ApiUtil.ServiceHelper},ApiUtil.HttpApi.IPlatformApi)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="httpApi"></param>
        </member>
        <member name="M:ApiUtil.ServiceHelper.GetTokenInfo">
            <summary>
            获取token中的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ApiUtil.ServiceHelper.GetDictObjectAsync(System.String)">
            <summary>
            获取平台字典中的信息
            </summary>
            <param name="dicType"></param>
            <returns></returns>
        </member>
    </members>
</doc>
