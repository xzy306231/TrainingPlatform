//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://www.freesql.net
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using Newtonsoft.Json;
using FreeSql.DataAnnotations;

namespace CoursewareModifyTool.Model {

	[JsonObject(MemberSerialization.OptIn), Table(Name = "t_person_info")]
	public partial class TPersonInfo {

		[JsonProperty, Column(Name = "birthday", DbType = "datetime2")]
		public DateTime? Birthday { get; set; }

		[JsonProperty, Column(Name = "blood_type", DbType = "nvarchar(MAX)")]
		public string BloodType { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "delete_flag")]
		public byte DeleteFlag { get; set; }

		[JsonProperty, Column(Name = "education_key", DbType = "nvarchar(MAX)")]
		public string EducationKey { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "education_value", DbType = "nvarchar(MAX)")]
		public string EducationValue { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "employment_date", DbType = "datetime2")]
		public DateTime? EmploymentDate { get; set; }

		[JsonProperty, Column(Name = "gender", DbType = "nvarchar(MAX)")]
		public string Gender { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "house_address", DbType = "nvarchar(MAX)")]
		public string HouseAddress { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "id", IsIdentity = true)]
		public long Id { get; set; }

		[JsonProperty, Column(Name = "marriage_status", DbType = "nvarchar(MAX)")]
		public string MarriageStatus { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "nation", DbType = "nvarchar(MAX)")]
		public string Nation { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "nationality", DbType = "nvarchar(MAX)")]
		public string Nationality { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "native_place", DbType = "nvarchar(MAX)")]
		public string NativePlace { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "original_id")]
		public long OriginalId { get; set; }

		[JsonProperty, Column(Name = "photo_path", DbType = "nvarchar(MAX)")]
		public string PhotoPath { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "qualification_expiration_date", DbType = "datetime2")]
		public DateTime? QualificationExpirationDate { get; set; }

		[JsonProperty, Column(Name = "qualification_get_date", DbType = "datetime2")]
		public DateTime? QualificationGetDate { get; set; }

		[JsonProperty, Column(Name = "qualification_name", DbType = "nvarchar(MAX)")]
		public string QualificationName { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "qualification_type_key", DbType = "nvarchar(MAX)")]
		public string QualificationTypeKey { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "qualification_type_value", DbType = "nvarchar(MAX)")]
		public string QualificationTypeValue { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "regular_address", DbType = "nvarchar(MAX)")]
		public string RegularAddress { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "school_tag", DbType = "nvarchar(MAX)")]
		public string SchoolTag { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "sec_level")]
		public int? SecLevel { get; set; }

		[JsonProperty, Column(Name = "state_of_health", DbType = "nvarchar(MAX)")]
		public string StateOfHealth { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "student_flag")]
		public byte StudentFlag { get; set; }

		[JsonProperty, Column(Name = "t_create", DbType = "datetime2")]
		public DateTime TCreate { get; set; }

		[JsonProperty, Column(Name = "t_modified", DbType = "datetime2")]
		public DateTime TModified { get; set; }

		[JsonProperty, Column(Name = "teacher_flag")]
		public byte TeacherFlag { get; set; }

		[JsonProperty, Column(Name = "user_email", DbType = "nvarchar(MAX)")]
		public string UserEmail { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "user_name", DbType = "nvarchar(MAX)")]
		public string UserName { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "user_number", DbType = "nvarchar(MAX)")]
		public string UserNumber { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "user_phone", DbType = "nvarchar(MAX)")]
		public string UserPhone { get; set; } = string.Empty;

	}

}
